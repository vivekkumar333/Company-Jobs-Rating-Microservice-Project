server.port=8083

spring.application.name=company-rating-micro-service


# DataSource configuration
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/company_rating_db
spring.datasource.username= root
spring.datasource.password= Newuser@mysql8

# Hibernate configuration
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true


#Micro-service URL			: Work with Rest Template
#company-service.url=http://localhost:8081/company
#job-service.url=http://localhost:8082/job
#rating-service.url=http://localhost:8083/rating


#Micro-service URL  		: Works When Microservices are registered under service-registry
company-service.url=http://COMPANY-MICRO-SERVICE/company
job-service.url=http://JOB-MICRO-SERVICE/job
rating-service.url=http://COMPANY-RATING-MICRO-SERVICE/rating


## Eureka server configuration
eureka.client.serviceUrl-defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true


#Zipkin
management.tracing.sampling.probability=1.0
#management.zipkin.tracing.endpoint=


## Client config server configuration
spring.config.import=optional:configserver:http://localhost:8084
#spring.profiles.active=


#resilience4j Circuite Breaker configuration  - job-micro-service
resilience4j.circuitbreaker.instances.jobServiceBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.jobServiceBreaker.sliding-window-type=count-based 
resilience4j.circuitbreaker.instances.jobServiceBreaker.minimum-number-of-calls=7
resilience4j.circuitbreaker.instances.jobServiceBreaker.permitted-number-of-calls-in-half-open-state=5
resilience4j.circuitbreaker.instances.jobServiceBreaker.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.jobServiceBreaker.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.jobServiceBreaker.automatic-transition-from-open-to-half-open-enabled=true


# Resilience4j Circuit Breaker configuration - company-micro-service
resilience4j.circuitbreaker.instances.companyServiceBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.companyServiceBreaker.sliding-window-size=10
resilience4j.circuitbreaker.instances.companyServiceBreaker.sliding-window-type=count-based
resilience4j.circuitbreaker.instances.companyServiceBreaker.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.companyServiceBreaker.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.companyServiceBreaker.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.companyServiceBreaker.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.companyServiceBreaker.automatic-transition-from-open-to-half-open-enabled=true


# retry-configuration
resilience4j.retry.instances.jobServiceBreaker.max-attempts=5
resilience4j.retry.instances.jobServiceBreaker.wait-duration=5s

resilience4j.retry.instances.companyServiceBreaker.max-attempts=5
resilience4j.retry.instances.companyServiceBreaker.wait-duration=2s


# Rate-Limitter configuration 
# It will allow 3,Req in 10 Second
resilience4j.ratelimiter.instances.jobServiceBreaker.limit-refresh-period=5s
resilience4j.ratelimiter.instances.jobServiceBreaker.timeout-duration=0s
resilience4j.ratelimiter.instances.jobServiceBreaker.limit-for-period=3

resilience4j.ratelimiter.instances.companyServiceBreaker.limit-refresh-period=5s
resilience4j.ratelimiter.instances.companyServiceBreaker.timeout-duration=0s
resilience4j.ratelimiter.instances.companyServiceBreaker.limit-for-period=3


# Actuator CircuiteBreaker configuration
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

